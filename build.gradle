plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.17'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "com.github.node-gradle.node" version "3.3.0"

}

group = 'com.realEstate'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	jcenter() // JCenter Repository 사용
}

dependencies {
	// Querydsl 관련 의존성 추가
	implementation "com.querydsl:querydsl-jpa"
	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-collections"
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
	annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
	annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드


	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

//	implementation 'mysql:mysql-connector-java:8.0.23' // 원하는 버전 사용
	//AWS
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	//OPENAI
	implementation 'io.github.flashvayne:chatgpt-spring-boot-starter:1.0.4'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	implementation 'com.auth0:java-jwt:3.18.1'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	//토큰 사용
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.11.5"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.5"
	implementation "io.jsonwebtoken:jjwt-api:0.11.5"

	// 웹소켓 사용
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.webjars:stomp-websocket:2.3.3'
	implementation 'org.webjars:sockjs-client:1.0.2'

	//타임리프
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux'
	implementation 'org.json:json:20200518'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'

	implementation 'org.modelmapper:modelmapper:2.4.2'
	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//자바 역직렬화 문제 해결 패키지
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	//kafka
	implementation 'org.springframework.kafka:spring-kafka'

	//mongoDB
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	//Guava
	implementation 'com.google.guava:guava:31.0.1-jre'
	implementation 'javax.validation:validation-api:2.0.1.Final' // 현재 버전에 맞게 업데이트

}


tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 설정부
def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
	main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file(generated)
}
